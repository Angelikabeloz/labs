getwd()
runApp("our_app")
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# save the built-in output hook
hook_output <- knitr::knit_hooks$get("output")
# set a new output hook to truncate text output
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x <- xfun::split_lines(x)
if (length(x) > n) {
# truncate the output
x <- c(head(x, n), "....\n")
}
x <- paste(x, collapse = "\n")
}
hook_output(x, options)
})
colorise <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
library(shiny)
runApp("our_app")
runApp("our_app")
if (FALSE) {
library(RSQLite)
library(dbplyr)
}
# Set up handles to database tables on app start
db <- src_sqlite("movies.db")
omdb <- tbl(db, "omdb")
# Set up handles to database tables on app start
db <- src_sqlite("our_app/movies.db")
omdb <- tbl(db, "omdb")
tomatoes <- tbl(db, "tomatoes")
# Join tables, filtering out those with <10 reviews, and select specified columns
all_movies <- inner_join(omdb, tomatoes, by = "ID") %>%
filter(Reviews >= 10) %>%
select(ID, imdbID, Title, Year, Rating_m = Rating.x, Runtime, Genre, Released,
Director, Writer, imdbRating, imdbVotes, Language, Country, Oscars,
Rating = Rating.y, Meter, Reviews, Fresh, Rotten, userMeter, userRating, userReviews,
BoxOffice, Production, Cast)
View(all_movies)
?plotly
??plotly
library(plotly)
?plot_ly
?plot_ly
x <- emo::jis
View(x)
View(x)
runApp("our_app")
?plot_ly
?add_trace
runApp("our_app")
?layout()
runApp(app_plotly.R)
runApp("app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
?plot_ly
runApp("our_app/app_plotly.R")
?plot_ly
?reactive
?bind_shiny
movies %>%
plot_ly(
data = .,
type = 'scatter',
mode = 'markers',
x = ~xvar,
y = ~yvar,
marker = list(size = ~ratings, sizeref = 4000, sizemode = 'area'),
stroke = ~has_oscar,
alpha_stroke = 0.2,
text = ~movie_tooltip,
)
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
runApp("our_app/app_plotly.R")
?ggvis
runApp("our_app/app_plotly.R")
