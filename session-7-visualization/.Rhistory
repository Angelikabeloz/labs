theme_minimal()
summary(df$lifeExp)
ggplot(df,
aes(x = lifeExp)) +
geom_histogram()
min(df$lifeExp) - max(df$lifeExp) # approx 60 years
ggplot(df,
aes(x = lifeExp)) +
geom_histogram(bins = 60)
ggplot(df,
aes(x = lifeExp)) +
geom_density()
ggplot(subset(df),
aes(x = continent,
y = lifeExp)) +
geom_boxplot() +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Continent",
y = "Life expectancy in years") +
theme_bw() +
coord_flip()
ggplot(subset(df),
aes(x = continent,
y = lifeExp)) +
geom_violin() +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Continent",
y = "Life expectancy in years") +
theme_bw() +
coord_flip()
par(mar = c(4, 4, .1, .1)) # to let the figures sit side by side
ggplot(penguins, aes(x = body_mass_g)) +
geom_histogram()
ggplot(penguins, aes(x = body_mass_g, y = species)) +
geom_violin(aes(fill = species), alpha = 0.5)+
labs(x = "Body Mass (g)",
y = "Species")
ggplot(df,
aes(x = gdpPercap,
y = lifeExp)) +
geom_point() +
labs(title = "Economic wealth and life expectancy",
x = "GDP per capita",
y = "Life expectancy") +
theme_light()
ggplot(df,
aes(x = gdpPercap,
y = lifeExp)) +
geom_point(alpha = 0.4,
size = 0.5) +
labs(title = "Economic wealth and life expectancy",
x = "GDP per capita",
y = "Life expectancy") +
theme_light()
av = mean(df$gdpPercap)
av
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# save the built-in output hook
hook_output <- knitr::knit_hooks$get("output")
# set a new output hook to truncate text output
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(n <- options$out.lines)) {
x <- xfun::split_lines(x)
if (length(x) > n) {
# truncate the output
x <- c(head(x, n), "....\n")
}
x <- paste(x, collapse = "\n")
}
hook_output(x, options)
})
colorise <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
knitr::include_graphics("https://user-images.githubusercontent.com/54796579/94537983-b94fa100-0243-11eb-8d12-c2e685141092.png")
pacman::p_load(
tidyverse,
foreign,
palmerpenguins,
haven,
gapminder,
viridis
)
df <- gapminder # let's make a copy of the data to save some characters
str(df)
par(mar = c(4, 4, .1, .1)) # to let the figures sit side by side
# basic plot
ggplot(penguins, aes(x = flipper_length_mm, y=body_mass_g)) +
geom_point()
# advanced scatter plot
ggplot(penguins, aes(x = flipper_length_mm, y=body_mass_g, color = species)) +
geom_point()+
labs(x = "Flipper Length",
y = " Body Mass (g)")+
theme_minimal()
summary(df$lifeExp)
ggplot(df,
aes(x = lifeExp)) +
geom_histogram()
min(df$lifeExp) - max(df$lifeExp) # approx 60 years
ggplot(df,
aes(x = lifeExp)) +
geom_histogram(bins = 60)
ggplot(df,
aes(x = lifeExp)) +
geom_density()
ggplot(subset(df),
aes(x = continent,
y = lifeExp)) +
geom_boxplot() +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Continent",
y = "Life expectancy in years") +
theme_bw() +
coord_flip()
ggplot(subset(df),
aes(x = continent,
y = lifeExp)) +
geom_violin() +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Continent",
y = "Life expectancy in years") +
theme_bw() +
coord_flip()
par(mar = c(4, 4, .1, .1)) # to let the figures sit side by side
ggplot(penguins, aes(x = body_mass_g)) +
geom_histogram()
ggplot(penguins, aes(x = body_mass_g, y = species)) +
geom_violin(aes(fill = species), alpha = 0.5)+
labs(x = "Body Mass (g)",
y = "Species")
ggplot(df,
aes(x = gdpPercap,
y = lifeExp)) +
geom_point() +
labs(title = "Economic wealth and life expectancy",
x = "GDP per capita",
y = "Life expectancy") +
theme_light()
ggplot(df,
aes(x = gdpPercap,
y = lifeExp)) +
geom_point(alpha = 0.4,
size = 0.5) +
labs(title = "Economic wealth and life expectancy",
x = "GDP per capita",
y = "Life expectancy") +
theme_light()
av = mean(df$gdpPercap)
ggplot(df,
aes(x = gdpPercap)) +
geom_line(stat = "density") +
labs(title = "Untransformed distribution") +
geom_vline(xintercept = av, color = "red")
par(mar = c(4, 4, .1, .1))
ggplot(df,
aes(x = log10(gdpPercap))) +
geom_line(stat = "density") +
labs(title = "Applying log10 to variable directly") +
geom_vline(xintercept = log10(av), color = "red")
# Note below that we do NOT need to specify the av in terms of log10
# The entire x-axis is transformed
ggplot(df,
aes(x = gdpPercap)) +
geom_line(stat = "density") +
labs(title = "Transformation using scales") +
scale_x_log10() +
geom_vline(xintercept = av, color = "red")
# Bonus: alternatively could also use scale_x_continuous(trans = "log10")
ggplot(df,
aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point(alpha = 0.4,
size = 0.5) +
labs(title = "Economic wealth and life expectancy",
x = "GDP per capita (log10)",
y = "Life expectancy") +
theme_light()
par(mar = c(4, 4, .1, .1))
ggplot(df,
aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point(alpha = 0.4,
size = 0.5) +
labs(title = "Economic wealth and life expectancy",
x = "ln GDP per capita",
y = "Life expectancy") +
theme_light() +
geom_smooth()
#Alternatively, we can add a linear trend line to the data.
ggplot(df,
aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point(alpha = 0.4,
size = 0.5) +
labs(title = "Economic wealth and life expectancy",
x = "ln GDP per capita",
y = "Life expectancy") +
theme_light() +
geom_smooth(method = "lm")
ggplot(df,
aes(x = log(gdpPercap),
y = lifeExp,
color = continent)) +
geom_point(alpha = 0.2,
size = 1) +
labs(title = "Economic wealth and life expectancy",
x = "ln GDP per capita",
y = "Life expectancy") +
theme_light() +
geom_smooth(method = "lm")
par(mar = c(4, 4, .1, .1))
ggplot(subset(df, country == "China"),
aes(x = year,
y = gdpPercap)) +
geom_line()
# We can add points to the line to highlight which observations are available in the underlying data.
ggplot(subset(df, country == "China"),
aes(x = year,
y = gdpPercap)) +
geom_line() +
geom_point()
# Compute Pearson correlation coefficient by year and continent
cors <- df %>%
filter(continent != "Oceania") %>%
group_by(continent, year) %>%
summarise(cor = cor(lifeExp, log10(gdpPercap)))
par(mar = c(4, 4, .1, .1))
ggplot(cors,
aes(x = year, y = continent, fill = cor)) +
geom_tile()
ggplot(cors,
aes(x = year, y = continent, fill = cor)) +
geom_tile() +
scale_fill_gradient(low = "darkblue", high = "red")
par(mar = c(4, 4, .1, .1))
ggplot(cors,
aes(x = year, y = continent, fill = cor)) +
geom_tile() +
scale_fill_viridis(option = "inferno", name = "Correlation")
range(cors$cor)
ggplot(cors,
aes(x = year, y = continent, fill = cor)) +
geom_tile() +
scale_fill_viridis(option = "inferno", name = "Correlation",
limits = c(0, 1))
ggplot(cors,
aes(x = year, y = continent, fill = cor)) +
geom_tile(color = "white") +
scale_fill_viridis(option = "inferno", name = "Correlation\ncoefficient",
limits = c(0, 1)) +
labs(x = "",
y = "",
title = "Correlation between life expectancy and GDP per capita") +
# Changing appearance of the plot
theme_light() +
theme(panel.grid = element_blank(),
legend.position = "bottom",
legend.key.width = unit(1.5, "cm"),
panel.border=element_blank(),
axis.ticks = element_blank()) +
# Adjust x axis labels
scale_x_continuous(breaks = unique(cors$year)) +
# Reduce space between plot and labels
coord_cartesian(expand = 0)
globalpop <- df %>%
group_by(continent, year) %>%
# Need to transform int to num to prevent integer overflow
summarise(pop_tot = sum(as.numeric(pop)))
par(mar = c(4, 4, .1, .1))
# stacked
ggplot(globalpop,
aes(x = year, y = pop_tot, fill = continent)) +
geom_col()
# separate bars
ggplot(globalpop,
aes(x = year, y = pop_tot, fill = continent)) +
geom_col(position = position_dodge())
diff07 <- df %>%
group_by(country) %>%
arrange(year) %>%
mutate(fd = pop - dplyr::lag(pop))
ggplot(subset(diff07, continent == "Europe" & year == 2007),
aes(x = country, y = fd)) +
geom_col()
par(mar = c(4, 4, .1, .1))
ggplot(subset(diff07, continent == "Europe" & year == 2007),
aes(x = country, y = fd)) +
geom_col() +
coord_flip()
ggplot(subset(diff07, continent == "Europe" & year == 2007),
aes(x = reorder(country, fd), y = (fd/1e+6))) +
geom_col() +
coord_flip() +
labs(x = "", y = "Population change in millions")
par(mar = c(4, 4, .1, .1))
ggplot(penguins, aes(x = species, y = body_mass_g)) +
geom_boxplot() +
theme_minimal() +
labs(x = "Species",
y = "Body mass (g)")
ggplot(penguins, aes(x= flipper_length_mm, y = body_mass_g, color = species)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal() +
labs(x = "Length of the flipper",
y = "Body mass (g)",
color = "Species")
ggplot(df,
aes(x = lifeExp)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density")
ggplot(df,
aes(x = lifeExp)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density") +
coord_cartesian(xlim = c(0, 85))
par(mar = c(4, 4, .1, .1))
ggplot(df,
aes(x = lifeExp)) +
geom_density(color = "darkblue") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density")
ggplot(df,
aes(x = lifeExp)) +
geom_density(color = "#2727ff") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density")
par(mar = c(4, 4, .1, .1))
ggplot(df,
aes(x = lifeExp)) +
geom_line(stat = "density",
color = "#2727ff",
linetype = "dotdash") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density")
ggplot(df,
aes(x = lifeExp)) +
geom_line(stat = "density",
color = "#2727ff",
linetype = "dotdash",
size = 2) +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density")
ggplot(df,
aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point(alpha = 0.4, color = "#2727ff") +
labs(title = "Economic wealth and life expectancy",
x = "GDP per capita (log10)",
y = "Life expectancy") +
theme_light()
par(mar = c(4, 4, .1, .1))
ggplot(df,
aes(x = log(gdpPercap),
y = lifeExp)) +
geom_point(alpha = 0.4,
size = 0.5,
shape = 4) +
labs(title = "Economic wealth and life expectancy",
x = "GDP per capita (log10)",
y = "Life expectancy") +
theme_light()
ggplot(subset(df, year == 2007),
aes(x = log(gdpPercap),
y = lifeExp,
shape = continent)) +
geom_point() +
labs(title = "Economic wealth and life expectancy",
subtitle = "2007",
x = "GDP per capita (log10)",
y = "Life expectancy") +
theme_light()
table(df$continent)
ggplot(df,
aes(x = lifeExp,
color = continent)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density") +
theme_bw()
par(mar = c(4, 4, .1, .1))
ggplot(df,
aes(x = lifeExp,
color = continent)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density") +
theme_bw() +
scale_color_manual(values = c("Africa" = "darkorange",
"Americas" = "darkblue",
"Europe" = "darkgreen",
"Asia" = "darkred",
"Oceania" = "purple2"),
name = "Continent")
ggplot(df,
aes(x = lifeExp,
color = continent)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density") +
theme_bw() +
scale_color_brewer(palette = "BrBG",
name = "Continent")
ggplot(df,
aes(x = lifeExp,
color = continent,
linetype = continent)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density") +
theme_bw() +
scale_color_brewer(palette = "Set1",
name = "Continent") +
scale_linetype_discrete(name = "Continent")
ggplot(df,
aes(x = lifeExp)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density") +
theme_bw() +
facet_wrap(~ continent, nrow = 1)
ggplot(subset(df, continent != "Oceania"),
aes(x = lifeExp)) +
geom_line(stat = "density") +
labs(title = "Distribution of global life expectancy 1952-2007",
subtitle = "Data source: Gapminder package",
x = "Life expectancy in years",
y = "Density") +
theme_bw() +
facet_grid(year ~ continent)
ggplot(subset(df, country %in% c("Brazil", "Russia", "China", "India", "South Africa")),
aes(x = year,
y = gdpPercap,
linetype = country,
shape = country,
colour = country)) + #shape would work for greyscale!
geom_line(alpha = 0.5) +
geom_point(alpha = 0.8,
size = 0.8) +
theme_light() +
scale_shape_discrete(name = "Country") +
scale_linetype_discrete(name = "Country") +
labs(title = "GDP per capita in BRICS countries",
x = "Year",
y = "GDP per capita")+
guides(shape = "none", linetype = "none") # hide two dimensions of the legend
ggplot(subset(df, country %in% c("Brazil", "Russia", "China", "India", "South Africa")),
aes(x = year,
y = gdpPercap)) +
geom_line(alpha = 0.5) +
geom_point(alpha = 0.8,
size = 0.4) +
theme_light() +
labs(title = "GDP per capita in BRICS countries",
x = "Year",
y = "GDP per capita") +
facet_wrap(~country, nrow = 1) +
scale_x_continuous(breaks = seq(1950,2000, 25))
# ggsave("panel_lifeexp_continent.png", width = 6, height = 3, dpi = 400)
p1 <- ggplot(df,
aes(x = lifeExp)) +
geom_density()
#ggsave("output/images/lifeexp_dens.png", width = 3, height = 2, dpi = 300, p1)
p1 <- ggplot(df,
aes(x = lifeExp)) +
geom_density()
p2 <- ggplot(df,
aes(x = lifeExp)) +
geom_histogram()
grid.arrange(p1, p2, nrow = 1)
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
ggsave("output/images/lifeexp_double.png", width = 6, height = 2, dpi = 300)
ggsave("lifeexp_double.png", width = 6, height = 2, dpi = 300)
grid.arrange(p1, p2, nrow = 1)
p3 <- grid.arrange(p1, p2, nrow = 1)
ggsave("lifeexp_double.png", width = 6, height = 2, dpi = 300, p3)
