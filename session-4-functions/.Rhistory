}
my_vec <- c(1,2,3,4,5)
my_mean(my_vec)
my_mean(study$bmi)
mean(study$bmi, na.rm=T) # oops
# rude way
my_mean2 <- function(x){
x <- na.omit(x)
sum(x)/length(x)
}
my_mean2(study$bmi)
is.na(study$emotions)
table(is.na(study$emotions))
# repetitive code
mean(df$a)
df <- data.frame(
a = rnorm(100, 5, 2),
b = rnorm(100, 100, 15),
c = rnorm(100, 2, 1),
d = rnorm(100, 36, 7)
)
# repetitive code
mean(df$a)
mean(df$b)
mean(df$c)
mean(df$d)
# equivalent map function
map_dbl(df,mean)
# map function in tidyverse style
df %>% map_dbl(mean)
# "old" apply function
lapply(df,mean)
map_dbl(df,zscale)
zscale <- function(x){
if (is.numeric(x)) {
(x - mean(x, na.rm = T) / sd(x, na.rm = T))
}
}
map_dbl(df,zscale)
map(df,zscale)
map_df(df,zscale)
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
error = FALSE,
message = FALSE,
warning = FALSE,
comment = NA)
# load packages
library(haven)
library(ggplot2)
library(reshape2)
library(rdrobust)
library(knitr)
library(xtable)
library(dplyr)
library(tidyr)
library(kableExtra)
library(stargazer)
library(lubridate)
# replication data
rep_data <- read_dta("voting_at_16/dataverse_files/Data_for_replication.dta")
# population data
pop_data <- read_dta("voting_at_16/dataverse_files/Population_data.dta")
# AGE 16
attach(rep_data)
Dependent_variables = c('attention_to_politics', 'talking_about_politics',
'political_knowledge', 'internal_political_efficacy',
'external_political_efficacy', 'political_trust')
DVs = list(Attention_politics_general, Talk_general, Knowledge,
Internal_efficacy, External_efficacy, Trust)
coefficient = c()
p_value    = c()
CI_upper   = c()
CI_lower = c()
for(DV in DVs) {
rdd = rdrobust::rdrobust(DV, Age_16,
c = 0, kernel = "tri", p = 4, bwselect = "mserd")
coefficient = c(coefficient, round(rdd$coef[2],3))
p_value = c(p_value, round(rdd$pv[2],3))
CI_upper = c(CI_upper, round(rdd$ci[2],3))
CI_lower = c(CI_lower, round(rdd$ci[5],3))
}
sum1_16 <- data.frame(Dependent_variables, coefficient, p_value, CI_upper, CI_lower)
# AGE 18
Dependent_variables = c('attention_to_politics', 'talking_about_politics',
'political_knowledge', 'internal_political_efficacy',
'external_political_efficacy', 'political_trust')
DVs = list(Attention_politics_general, Talk_general, Knowledge,
Internal_efficacy, External_efficacy, Trust)
coefficient = c()
p_value    = c()
CI_upper   = c()
CI_lower = c()
attach(rep_data)
for(DV in DVs) {
rdd = rdrobust::rdrobust(DV, Age_18,
c = 0, kernel = "tri", p = 4, bwselect = "mserd")
coefficient = c(coefficient, round(rdd$coef[2],3))
p_value = c(p_value, round(rdd$pv[2],3))
CI_upper = c(CI_upper, round(rdd$ci[2],3))
CI_lower = c(CI_lower, round(rdd$ci[5],3))
}
sum1_18 <- data.frame(Dependent_variables, coefficient, p_value, CI_upper, CI_lower)
sum1_16 %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
position = "center")
sum1_18 %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
position = "center")
par(mar = c(4, 4, .1, .1))
rdrobust::rdplot(rep_data$Attention_politics_general,
rep_data$Age_16,
c = 0, kernel = "tri", p = 4, h = 100,
title = "Effects of the Enfranchisement at age 16",
x.label = "Age at Election Day",
y.label =  "Attention to Politics",
x.lim = c(-100, 100),
col.dots = "gray", col.lines = "black")
rdrobust::rdplot(rep_data$Attention_politics_general,
rep_data$Age_18,
c = 0, kernel = "tri", p = 4, h = 200,
title = "Effects of the Enfranchisement at age 18",
x.label = "Age at Election Day",
y.label =  "Attention to Politics",
x.lim = c(-200, 200),
col.dots = "gray", col.lines = "black")
rdrobust::rdplot(rep_data$Talk_general,
rep_data$Age_16,
c = 0, kernel = "tri", p = 4, h = 150,
title = "Effects of the Enfranchisement at age 16",
x.label = "Age at Election Day",
y.label =  "Talking about Politics",
x.lim = c(-150, 150),
col.dots = "gray", col.lines = "black")
rdrobust::rdplot(rep_data$Talk_general,
rep_data$Age_18,
c = 0, kernel = "tri", p = 4, h = 250,
title = "Effects of the Enfranchisement at age 18",
x.label = "Age at Election Day",
y.label =  "Talking about Politics",
x.lim = c(-250, 250),
col.dots = "gray", col.lines = "black")
rdrobust::rdplot(rep_data$Knowledge,
rep_data$Age_16,
c = 0, kernel = "tri", p = 4, h = 100,
title = "Effects of the Enfranchisement at age 16",
x.label = "Age at Election Day",
y.label =  "Political knowledge",
x.lim = c(-100, 100),
col.dots = "gray", col.lines = "black")
rdrobust::rdplot(rep_data$Knowledge,
rep_data$Age_18,
c = 0, kernel = "tri", p = 4, h = 200,
title = "Effects of the Enfranchisement at age 18",
x.label = "Age at Election Day",
y.label =  "Political knowledge",
x.lim = c(-200, 200),
col.dots = "gray", col.lines = "black")
# AGE 16
attach(rep_data)
Dependent_variables = c('online_activity', 'future_online_activity')
DVs = list(Online, Intended)
coefficient = c()
p_value    = c()
CI_upper   = c()
CI_lower = c()
for(DV in DVs) {
rdd = rdrobust::rdrobust(DV, Age_16,
c = 0, kernel = "tri", p = 4, bwselect = "mserd")
coefficient = c(coefficient, round(rdd$coef[2],3))
p_value = c(p_value, round(rdd$pv[2],3))
CI_upper = c(CI_upper, round(rdd$ci[2],3))
CI_lower = c(CI_lower, round(rdd$ci[5],3))
}
sum2_16 <- data.frame(Dependent_variables, coefficient, p_value, CI_upper, CI_lower)
# AGE 18
attach(rep_data)
Dependent_variables = c('online_activity', 'future_online_activity')
DVs = list(Online, Intended)
coefficient = c()
p_value    = c()
CI_upper   = c()
CI_lower = c()
for(DV in DVs) {
rdd = rdrobust::rdrobust(DV, Age_18,
c = 0, kernel = "tri", p = 4, bwselect = "mserd")
coefficient = c(coefficient, round(rdd$coef[2],3))
p_value = c(p_value, round(rdd$pv[2],3))
CI_upper = c(CI_upper, round(rdd$ci[2],3))
CI_lower = c(CI_lower, round(rdd$ci[5],3))
}
sum2_18 <- data.frame(Dependent_variables, coefficient, p_value, CI_upper, CI_lower)
sum2_16 %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
position = "center")
sum2_18 %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
position = "center")
# AGE 16
attach(rep_data)
Dependent_variables = c('sex', 'social_class', 'education')
DVs = list(Sex, Books, Expected_education)
coefficient = c()
p_value    = c()
CI_upper   = c()
CI_lower = c()
for(DV in DVs) {
rdd = rdrobust::rdrobust(DV, Age_16,
c = 0, kernel = "tri", p = 4, bwselect = "mserd")
coefficient = c(coefficient, round(rdd$coef[2],3))
p_value = c(p_value, round(rdd$pv[2],3))
CI_upper = c(CI_upper, round(rdd$ci[2],3))
CI_lower = c(CI_lower, round(rdd$ci[5],3))
}
sum3_16 <- data.frame(Dependent_variables, coefficient, p_value, CI_upper, CI_lower)
# AGE 18
attach(rep_data)
Dependent_variables = c('sex', 'social_class', 'education')
DVs = list(Sex, Books, Expected_education)
coefficient = c()
p_value    = c()
CI_upper   = c()
CI_lower = c()
for(DV in DVs) {
rdd = rdrobust::rdrobust(DV, Age_18,
c = 0, kernel = "tri", p = 4, bwselect = "mserd")
coefficient = c(coefficient, round(rdd$coef[2],3))
p_value = c(p_value, round(rdd$pv[2],3))
CI_upper = c(CI_upper, round(rdd$ci[2],3))
CI_lower = c(CI_lower, round(rdd$ci[5],3))
}
sum3_18 <- data.frame(Dependent_variables, coefficient, p_value, CI_upper, CI_lower)
sum3_16 %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
position = "center")
sum3_18 %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
position = "center")
# 16 year olds
bws = seq(50, 200, 5)
coefs = c()
ses   = c()
for(bw in bws) {
rdd = rdrobust::rdrobust(rep_data$Attention_politics_general, rep_data$Age_16,
c = 0, kernel = "tri", p = 4, h = bw)
coefs = c(coefs, rdd$coef[2])
ses = c(ses, rdd$se[2])
}
ests = data.frame(bw = bws, coef = coefs, se = ses)
ggplot(ests, aes(bw, coef, group = 1)) +
geom_point() +
geom_pointrange(aes(ymax = coef + 1.96 * se, ymin = coef - 1.96 * se),
colour = 'black', alpha = 0.6) +
geom_hline(yintercept = 0) +
labs(title = 'Effect of enfranchisement on attention to politics among 16-year-olds',
y = "Bias corrected RD estimates",
x = "Bandwidth")+
theme_minimal()
# 18 year oldds
bws = seq(117, 470, 10)
coefs = c()
ses   = c()
for(bw in bws) {
rdd = rdrobust::rdrobust(rep_data$Attention_politics_general, rep_data$Age_18,
c = 0, kernel = "tri", p = 4, h = bw)
coefs = c(coefs, rdd$coef[2])
ses = c(ses, rdd$se[2])
}
ests = data.frame(bw = bws, coef = coefs, se = ses)
ggplot(ests, aes(bw, coef, group = 1)) +
geom_point() +
geom_pointrange(aes(ymax = coef + 1.96 * se, ymin = coef - 1.96 * se),
colour = 'black', alpha = 0.6) +
geom_hline(yintercept = 0) +
labs(title = 'Effect of enfranchisement on attention to politics among 18-year-olds',
y = "Bias corrected RD estimates",
x = "Bandwidth")+
theme_minimal()
# sorting around the cutoff - 16
ggplot(data=rep_data,
aes(x = Age_16)) +
geom_histogram(bins = 25, fill = "lightgrey") +
xlim(-500, 500) +
labs(title = "Age distribution - 16-year-olds",
x = "Age at Election Day",
y = "Number of adolescents") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_minimal()
# sorting around the cutoff - 18
ggplot(data=rep_data,
aes(x = Age_18)) +
geom_histogram(bins = 25, fill = "lightgrey") +
xlim(-500, 500) +
labs(title = "Age distribution - 18-year-olds",
x = "Age at Election Day",
y = "Number of adolescents") +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_minimal()
# binomial test for sorting around cutoff
rep_data <- rep_data %>%
mutate(treatment_16 = ifelse(Age_16 > 0, 1, 0))%>%
mutate(treatment_18 = ifelse(Age_18 > 0, 1, 0))
# test for 16 year olds
rep_data %>%
dplyr::filter(dplyr::between(Age_16, -100, 100)) %>%
dplyr::group_by(treatment_16) %>%
dplyr::summarize(n = n()) %>%
knitr::kable() %>%
kableExtra::kable_styling()
binom.test(x = c(160, 131) , p = 0.5)
# test for 18 year olds
rep_data %>%
dplyr::filter(dplyr::between(Age_18, -100, 100)) %>%
dplyr::group_by(treatment_18) %>%
dplyr::summarize(n = n()) %>%
knitr::kable() %>%
kableExtra::kable_styling()
binom.test(x = c(110, 123) , p = 0.5)
# donut hole test
rep_data <- rep_data %>%
mutate(ap_1 = if_else(Age_16>=-5 & Age_16<5, NA_real_, Attention_politics_general),
ap_2 = if_else(Age_16>=-7.5 & Age_16<7.5, NA_real_, Attention_politics_general),
ap_3 = if_else(Age_16>=-10 & Age_16<10, NA_real_, Attention_politics_general))
detach(rep_data)
attach(rep_data)
Donut_holes = c("+/- 5%","+/- 7.5%","+/- 10%")
holes = list(ap_1, ap_2, ap_3)
coefficient = c()
p_value    = c()
CI_upper   = c()
CI_lower = c()
for(hole in holes) {
rdd = rdrobust::rdrobust(hole, Age_16,
c = 0, kernel = "tri", p = 4, bwselect = "mserd")
coefficient = c(coefficient, round(rdd$coef[2],3))
p_value = c(p_value, round(rdd$pv[2],3))
CI_upper = c(CI_upper, round(rdd$ci[2],3))
CI_lower = c(CI_lower, round(rdd$ci[5],3))
}
sum4_16 <- data.frame(Donut_holes, coefficient, p_value, CI_upper, CI_lower)
sum4_16  %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
position = "center")
# 16 year olds
cut_offs = seq(-50, 50, 2)
coefs = c()
ses   = c()
for(cut in cut_offs) {
rdd = rdrobust::rdrobust(rep_data$Attention_politics_general, rep_data$Age_16,
c = cut, kernel = "tri", p = 4, bwselect = "mserd")
coefs = c(coefs, rdd$coef[2])
ses = c(ses, rdd$se[2])
}
ests = data.frame(cut = cut_offs, coef = coefs, se = ses)
ggplot(ests, aes(cut, coef, group = 1)) +
geom_point() +
geom_pointrange(aes(ymax = coef + 1.96 * se, ymin = coef - 1.96 * se),
colour = 'black', alpha = 0.6) +
geom_hline(yintercept = 0) +
labs(title = 'Effect of enfranchisement on attention to politics among 16-year-olds',
y = "Bias corrected RD estimates",
x = "Cut-off values")+
theme_minimal()
study <- study %>%
rowwise() %>% # otherwise the function will only evaluate the first argument
mutate(emoticons = replace_with_emoticons(emotions))
study
study <- read_csv("study.csv")
study <- study %>%
mutate(emoticons = map_chr(emotions, replace_with_emoticons))
study
df <- data.frame(
a = rnorm(100, 5, 2),
b = rnorm(100, 100, 15),
c = rnorm(100, 2, 1),
d = rnorm(100, 36, 7)
)
zscale <- function(x){
(x - mean(x, na.rm = T) / sd(x, na.rm = T))
}
zscale <- function(x, val = F){
(x - mean(x, na.rm = val) / sd(x, na.rm = val))
}
zscale(df$a)
zscale(df$a, val=T)
vec <- c(1,2,3,4,NA)
zscale(vec)
zscale <- function(x, val = F){
(x - mean(x, na.rm = val)) / sd(x, na.rm = val)
}
zscale(vec, val = F)
zscale <- function(x, na.rm = F){
(x - mean(x, na.rm = na.rm )) / sd(x, na.rm = na.rm )
}
vec <- c(1,2,3,4,NA)
zscale(vec, na.rm = T)
# equivalent iteration
for (i in seq_along(df)) {       # seq_along() similar to length()
df[[i]] <- zscale(df[[i]])     # [[]] because we are working on single elements
}
# equivalent iteration
for (i in seq_along(df[,1:10])) {       # seq_along() similar to length()
df[[i]] <- zscale(df[[i]])     # [[]] because we are working on single elements
}
# equivalent iteration
for (i in seq_along(df[,1:2])) {       # seq_along() similar to length()
df[[i]] <- zscale(df[[i]])     # [[]] because we are working on single elements
}
# repetitive code
mean(df$a)
mean(df$b)
mean(df$c)
mean(df$d)
df <- data.frame(
a = rnorm(100, 5, 2),
b = rnorm(100, 100, 15),
c = rnorm(100, 2, 1),
d = rnorm(100, 36, 7)
)
# repetitive code
mean(df$a)
mean(df$b)
mean(df$c)
mean(df$d)
# equivalent map function
map_dbl(df,mean)
map(df,zscale)
map_df(df,zscale)
# clean data
my_mean <- function(x){
sum(x)/length(x)
}
my_vec <- c(1,2,3,4,5)
my_mean(my_vec)
my_mean(study$bmi)
# not so clean data
my_mean2 <- function(x){
sum(x, na.rm=T)/length(x)
}
mean(study$bmi, na.rm=T) # oops
# not so clean data
my_mean2 <- function(x){
sum(x, na.rm=T)/length(x)
}
my_mean2(study$bmi)
str(study)
study%>%
filter(!is.na(bmi))
study%>%
filter(!is.na(bmi))%>%
my_mean2()
# not so clean data
my_mean2 <- function(x){
sum(x, na.rm=T)/length(x)
}
study%>%
filter(!is.na(bmi))%>%
my_mean2()
study%>%
filter(!is.na(bmi))%>%
as.numeric()%>%
my_mean2()
# not so clean data
my_mean2 <- function(x){
sum(x)/length(x)
}
study%>%
filter(!is.na(bmi))%>%
as.numeric()%>%
my_mean2()
study%>%
na.omit()%>%
my_mean2()
study%>%
select(bmi)%>%
na.omit()%>%
my_mean2()
study%>%
filter(!is.na(bmi))%>%
select(bmi)%>%
my_mean2()
replace_with_emoticons <- function(x) {
if (x == "happy") {
":)"
} else if (x == "sad") {
":("
} else {
":/"
}
}
study <- study %>%
mutate(emoticons = map_chr(emotions, replace_with_emoticons))
study
study <- study %>%
rowwise() %>% # otherwise the function will only evaluate the first argument
mutate(emoticons2 = replace_with_emoticons(emotions))
study
getwd()
